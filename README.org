* mlpade

MATLAB functions for Pade approximations of the Mittag-Leffler function, E_{\alpha,\beta}(-x) and its inverse.

These approximations, R_{\alpha,\beta}^{m,n}(x) \approx E_{\alpha,\beta}(-x), are only valid where:
+ 0 \lt \alpha \le 1
+ \alpha \le \beta 
+ x \ge 0

This is just an implementation of:

"Highly Accurate Global Pade Approximations of Generalized Mittag-Leffler Function and its Inverse"
arXiv: 1912.10996

* Using the library

There's really only 2 functions you need to use:

~mlp.m~  : Mittag-Leffler function, E_{\alpha,\beta}(-x)
~imlp.m~ : inverse of Mittag-Leffler, -L_{\alpha,beta}(y)

For how to use them, see the docs in each file.

If you want to precompute your \alpha and \beta values and then more directly compute the approximant, the workflow is:
  1) ~solvePQcoeffs.m~ to get polynomial coefficients of the approximant for the given \alpha, \beta
  2) ~compute4OrdPoly.m~ to compute the polynomial

(but note that this workflow has no error checking/input validation, so user beware)

The other files are the actual implementations of the approximants, which do no sort of input checking/sanitizing and won't throw errors or warn you if you misuse them.
